version: '3.8'

services:
  # --------------- Bus
  bus:
    image: jrgiadach/soabus:v1
    container_name: soabus
    restart: always
    ports:
      - "5500:5000"

  # --------------- postgres
  postgres:
    image: postgres:14.10
    container_name: postgres
    restart: always
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    environment:
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_DATABASE=arquisw
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRES_PASSWORD=postgres

  # --------------- servicio base de datos
  service_bdd:
    container_name: service_bdd
    restart: "no"
    build:
      context: ./services
      dockerfile: Dockerfile
    command: sh -c "sleep 6 && python -u service_BDD.py"
    volumes:
      - ./services:/app/
    depends_on:
      - bus
      - postgres
    environment:
          - SOABUS_HOST=soabus

  # --------------- servicio registro/login
  service_reglog: 
    container_name: service_reglog
    restart: always
    build:
      context: ./services
      dockerfile: Dockerfile
    command: sh -c "sleep 6 && python -u service_reglog.py"
    volumes:
      - ./services:/app/
    depends_on:
      - bus
    environment:
          - SOABUS_HOST=soabus

  # --------------- servicio historial
  service_histo: 
    container_name: service_histo
    restart: always
    build:
      context: ./services
      dockerfile: Dockerfile
    command: sh -c "sleep 6 && python -u service_histo.py"
    volumes:
      - ./services:/app/
    depends_on:
      - bus
    environment:
          - SOABUS_HOST=soabus


# --------------- servicio citas
  service_citas: 
    container_name: service_citas
    restart: always
    build:
      context: ./services
      dockerfile: Dockerfile
    command: sh -c "sleep 6 && python -u service_citas.py"
    volumes:
      - ./services:/app/
    depends_on:
      - bus
    environment:
          - SOABUS_HOST=soabus

# --------------- servicio inventario
  service_inventario: 
    container_name: service_inventario
    restart: always
    build:
      context: ./services
      dockerfile: Dockerfile
    command: sh -c "sleep 6 && python -u service_inventario.py"
    volumes:
      - ./services:/app/
    depends_on:
      - bus
    environment:
          - SOABUS_HOST=soabus

# --------------- servicio prescripciones
  service_prescripciones: 
    container_name: service_prescripciones
    restart: always
    build:
      context: ./services
      dockerfile: Dockerfile
    command: sh -c "sleep 6 && python -u service_prescripciones.py"
    volumes:
      - ./services:/app/
    depends_on:
      - bus
    environment:
          - SOABUS_HOST=soabus

